import type { NextPage } from 'next';
import Head from 'next/head';
import PageContentWrap from '../../../components/generic/PageContentWrap';
import Flex from '../../../components/generic/Flex';
import Footer from '../../../components/Footer';
import PageWithFooter from '../../../components/PageWithFooter';
import Banner from '../../../components/Banner';
import PageTitle from '../../../components/PageTitle';
import PageIntro from '../../../components/PageIntro';
import tools from '../../../data/tools/list';
import RenderMarkdown from '../../../components/generic/RenderMarkdown';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import CodeBox from '../../../components/generic/CodeBox';
import HoverRevealEffect from '../../../components/generic/HoverRevealEffect';
import s from './[slug].module.css';

const ToolsReactLibrary: NextPage = () => {
  const router = useRouter();

  const [currentTool, setCurrentTool] = useState();
  const [currentToolMarkdown, setCurrentToolMarkdown]: [
    // string | undefined,
    any,
    Function
  ] = useState();

  useEffect(() => {
    const tool = tools.find((tool) => tool.slug === router.query.slug);

    if (!tool) {
      return;
    }

    setCurrentTool(tool);
    // setCurrentToolMarkdown(tool.content.exampleMarkDown);
  }, [router]);

  return (
    <PageWithFooter footerComponent={<Footer />}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main style={{ background: '#ECF4FA' }}>
        <Banner />
        <PageContentWrap>
          <div style={{ marginBottom: 96 }}>
            <div style={{ textAlign: 'center', marginTop: 64 }}>
              <PageTitle>React Behavioural UI Component Library</PageTitle>
              <PageIntro>
                A collection of components that provide behaviours and utilities
                to your visual UI components.
              </PageIntro>
            </div>
          </div>
          <Flex style={{ margin: 'auto', flexWrap: 'wrap' }}>
            {tools.map((tool) => (
              <Link
                key={tool.slug}
                href={tool.slug}
                scroll={false}
                passHref={true}
                style={{
                  margin: '24px',
                }}
              >
                <HoverRevealEffect
                  className={`${s.hover} ${
                    currentTool &&
                    tool.slug === currentTool.slug &&
                    s.hoverSelect
                  }`}
                >
                  <span
                    style={{
                      display: 'block',
                      paddingLeft: '16px',
                      paddingRight: '16px',
                      paddingTop: '8px',
                      paddingBottom: '8px',
                    }}
                  >
                    {tool.title}
                  </span>
                </HoverRevealEffect>
              </Link>
            ))}
          </Flex>
          <p
            style={{
              maxWidth: 700,
              marginLeft: 'auto',
              marginRight: 'auto',
              marginTop: '48px',
              marginBottom: '48px',
            }}
          >
            {currentTool ? currentTool.description : 'Component not found.'}
          </p>

          <div style={{ marginBottom: 96 }}>
            {currentTool &&
              currentTool.content.map((example) => (
                <Flex
                  style={{
                    alignItems: 'stretch',
                    marginBottom: 48,
                  }}
                >
                  <div
                    style={{
                      width: '50%',
                      marginRight: 8,
                    }}
                  >
                    {example.exampleMarkDown && (
                      <CodeBox
                        code={example.exampleMarkDown}
                        style={{ height: '100%' }}
                      />
                    )}
                    {/* <RenderMarkdown content={tools[0].content.content} /> */}
                    {/* <RenderMarkdown content={`${renderToString(<Test />)}`} /> */}
                    {/* <RenderMarkdown content={currentToolMarkdown} /> */}
                    {/* <RenderMarkdown
                  content="```jsx
                  <Flex
                    style={{ width: '100%', justifyContent: 'space-between' }}
                  >
                    <div>Hi</div>
                    <div>Hi 2</div> <div>Hi 3</div>
                  </Flex>
                  ```"
                /> */}
                  </div>

                  <Flex
                    style={{
                      marginLeft: 8,
                      width: '50%',
                      border: '2px solid #262C35',
                      borderRadius: '6px',
                      padding: '16px',
                      justifyContent: 'center',
                      alignItems: 'center',
                      padding: 24,
                    }}
                  >
                    {example.example()}
                  </Flex>
                </Flex>
              ))}
          </div>
        </PageContentWrap>
      </main>
    </PageWithFooter>
  );
};

export default ToolsReactLibrary;
